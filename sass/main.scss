@import "compass/css3";
@import "compass/reset";

@mixin animation($animate) {
	$max: length($animate);
	$animations: '';

	@for $i from 1 through $max {
		$animations: #{$animations + nth($animate, $i)};

		@if $i < $max {
			$animations: #{$animations + " "};
		}
	}
	-webkit-animation: $animations;
	-moz-animation: $animations;
	-o-animation: $animations;
	animation: $animations;
}
@mixin state($state) {
	-webkit-animation-play-state: $state;
	-moz-animation-play-state: $state;
	-o-animation-play-state: $state;
	animation-play-state: $state;
}
@mixin keyframes($animationName) {
	@-webkit-keyframes #{$animationName} {
		$browser: '-webkit-';
		@content;
	}
	@-moz-keyframes #{$animationName} {
		$browser: '-moz-';
		@content;
	}
	@-o-keyframes #{$animationName} {
		$browser: '-o-';
		@content;
	}
	@keyframes #{$animationName} {
		$browser: '';
		@content;
	}
}
$browser: null;
$white-line: rgba(255, 255, 255, 0.6);

$step-1: 5s;
$step-2: 10s;

/* global */
html {
	width: 100%;
	height: 100%;
}

body {
	width: 100%;
	height: 100%;
	color: #fff;
	background-color: #2d2d2d;
	background-size: 100% 100%;
	@include background(
		radial-gradient(100% 10%, 200% 160%,#375651, #000),
		linear-gradient(top right, #46655C, #fff)
	);
}

#main {
	@include perspective(500px);
	@include transform-style(preserve-3d);
	width: 100%;
	height: 100%;
	overflow: hidden;
}

.layer {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	overflow: hidden;
}
/* layer */
.l1 {
	@include transform(rotateX(-110deg));
	@include animation(fadein 10s $step-1 forwards);
}
.l2 {
	@include transform(rotateX(-110deg) translateZ(45px));
	@include transition($step-1);
}
.l3 {
	/* @include transform(rotateX(-110deg) translateZ(-15px));
	@include transition($step-1 + $step-2); */
}
/* dial */
.dial {
	position: relative;
	margin: 100px auto;
	width: 500px;
	height: 500px;
	.wrap {
		position: absolute;
		top: 20px;
		left: 20px;
		width: 460px;
		height: 460px;
	}
}
.degree {
	@include animation(degree 24s infinite linear);
	&:hover {
		@include state(paused);
	}
}
#path-degree {
	color: #fff;
	fill: none;
}
.text-degree {
	font-size: 30px;
	letter-spacing: 74px;
	text-anchor: start;
	stroke: $white-line;
	fill: none;
}
.circle {
	position: absolute;
	top: 100px;
	left: 100px;
	width: 300px;
	height: 300px;
	stroke-dasharray: 2000;
	stroke-dashoffset: 2000;
	stroke: $white-line;
	fill: none;
}
.c1 {
	@include animation(border $step-1 ease-in forwards);
}
.rect {
	position: absolute;
	top: 100px;
	left: 100px;
	width: 300px;
	height: 300px;
	stroke-dasharray: 2000;
	stroke-dashoffset: 2000;
	stroke: $white-line;
	stroke-width: 2;
	fill: none;
}
.r1 {
	@include animation(border $step-2 $step-1 ease forwards);
}

/* animation */

@include keyframes(degree) {
	0% {
		#{$browser}transform: rotateZ(0deg);
	}
	50% {
		#{$browser}transform: rotateZ(180deg);
	}
	100% {
		#{$browser}transform: rotateZ(360deg);
	}
}
@include keyframes(border) {
	0% {
		stroke-dashoffset: 2000;
	}
	100% {
		stroke-dashoffset: 0;
	}
}
@include keyframes(fadein) {
	0% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}